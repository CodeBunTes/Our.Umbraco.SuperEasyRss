<?xml version="1.0" encoding="utf-8"?>
<umbPackage>
  <info>
    <package>
      <name>Super Easy RSS</name>
    </package>
  </info>
  <DocumentTypes>
    <DocumentType>
      <Info>
        <Name>RSS Feed Page</Name>
        <Alias>rssFeedPage</Alias>
        <Key>db25a5f2-7508-4bab-a6d5-1f425fb668a0</Key>
        <Icon>icon-rss color-deep-orange</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>True</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates>
          <Template>RSSFeedPage</Template>
        </AllowedTemplates>
        <DefaultTemplate>RSSFeedPage</DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Root Node</Name>
          <Alias>rootNode</Alias>
          <Key>731b37bd-b16e-41bd-834f-fb40634712a9</Key>
          <Type>Umbraco.ContentPicker</Type>
          <Definition>fd1e0da5-5606-4862-b679-5d0cf3a52a59</Definition>
          <Tab Alias="generalSettings1">General Settings</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <Description><![CDATA[Defaults to parent of this]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Limit to Doctypes</Name>
          <Alias>limitToDoctypes</Alias>
          <Key>625c690a-6ccb-447e-b522-5f287e2a5b85</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="generalSettings1">General Settings</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <Description><![CDATA[eg contentPage;blogPage. Defaults to all doctypes. 'Rss Feed Page' is auto excluded.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Feed Title</Name>
          <Alias>feedTitle</Alias>
          <Key>8731881d-689d-4082-8b39-a9e8fa84e46c</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="generalSettings1">General Settings</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <Description><![CDATA[Overall title for the RSS feed. Defaults to Root Node > Title/Node Name]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Feed Description</Name>
          <Alias>feedDescription</Alias>
          <Key>ad9ef88a-1378-4701-b1ae-78adc2aefe91</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="generalSettings1">General Settings</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <Description><![CDATA[Overall introduction for the RSS Feed. Not included if empty.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Exclude From RSS</Name>
          <Alias>excludeFromRSS</Alias>
          <Key>41179cb7-158a-4e55-b568-0a76361e3e95</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="generalSettings1">General Settings</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <Description><![CDATA[This property will be checked for on all nodes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Title Property</Name>
          <Alias>titleProperty</Alias>
          <Key>636a541f-ebff-45c7-b545-c61c0dc6b6f5</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="documentProperties1">Document Properties</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <Description><![CDATA[Defaults to 'Title' followed by Node Name]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Summary Property</Name>
          <Alias>summaryProperty</Alias>
          <Key>5e050272-b700-4616-9e16-13a17778dbd8</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="documentProperties1">Document Properties</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <Description><![CDATA[Defaults to (in order) Intro, Intro Text, Summary, Summary Text, Description, Description Text, Body, Body Text]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Author Property</Name>
          <Alias>authorProperty</Alias>
          <Key>12fd1f42-a912-4750-b980-8706f0077812</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="documentProperties1">Document Properties</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <Description><![CDATA[Can be either a content/media picker or a textfield. Default is to use name of current editor.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Date Property</Name>
          <Alias>dateProperty</Alias>
          <Key>e156f365-46ba-4b74-8cab-0af665e9f3ce</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="documentProperties1">Document Properties</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <Description><![CDATA[Should be a datetime field. Defaults to node publish/created date.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>56</Id>
          <Key>879f7755-680b-451e-a627-6b25a1f4ce1c</Key>
          <Type>Tab</Type>
          <Caption>General Settings</Caption>
          <Alias>generalSettings1</Alias>
          <SortOrder>1</SortOrder>
        </Tab>
        <Tab>
          <Id>59</Id>
          <Key>159074c3-9d51-4e50-bd17-0210413b0130</Key>
          <Type>Tab</Type>
          <Caption>Document Properties</Caption>
          <Alias>documentProperties1</Alias>
          <SortOrder>2</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
  </DocumentTypes>
  <MediaTypes />
  <Templates>
    <Template>
      <Name>RSS Feed Page</Name>
      <Key>34ed1eba-17f1-458d-8a70-094e40002f13</Key>
      <Alias>RSSFeedPage</Alias>
      <Design><![CDATA[@using System.Web
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    Layout = null;
    var rssNode = Model;
    var rootNode = rssNode.HasValue("rootNode") ?
                        rssNode.Value<IPublishedContent>("rootNode") :
                        rssNode.Parent;

    if (rootNode == null)
    {
        // Drop out if used in a location with no parent and also set no root has been set manually
        return;
    }

    Context.Response.ContentType = "application/rss+xml";

    string rootDomain = rootNode.Url(mode: UrlMode.Absolute);
    string rssUrl = rssNode.Url(mode: UrlMode.Absolute);
    string rssLanguage = System.Threading.Thread.CurrentThread.CurrentCulture.Name;

    var feedTitle = rssNode.HasValue("feedTitle") ?
                        rssNode.Value<string>("feedTitle") :
                        FallbackTextRenderer(rootNode, "title", rssNode);

    var feedSummary = rssNode.HasValue("feedDescription") ?
                        rssNode.Value<string>("feedDescription") :
                        FallbackTextRenderer(rootNode, "summary", rssNode);

    var feedDocTypes = rssNode.Value<string>("limitToDoctypes")?.Split(";", StringSplitOptions.RemoveEmptyEntries);

    // Helper method to handle falling back through multiple fields. Identifier can be date, title, summary or author
    // Done here rather than a controller so everything is fully self-contained
    string? FallbackTextRenderer(IPublishedContent currentNode, string identifier, IPublishedContent rssNode)
    {
        if (identifier == "date")
        {
            if (rssNode.HasValue("dateProperty") && rssNode.Value("dateProperty") != null)
            {
                string dateProperty = rssNode.Value<string>("dateProperty") ?? "";
                if (currentNode.Value<DateTime?>(dateProperty) != null)
                {
                    return currentNode.Value<DateTime>(dateProperty).ToUniversalTime().ToString("R");
                }
                else
                {
                    return currentNode.CreateDate.ToUniversalTime().ToString("R");
                }
            }
        }

        string[] fields = Array.Empty<string>();
        if (identifier == "title")
        {
            fields = new string[] { rssNode.Value<string>("titleProperty") ?? "", "title", "Name" };
        }

        if (identifier == "summary")
        {
            fields = new string[] { rssNode.Value<string>("summaryProperty") ?? "", "intro", "introText", "summary", "summaryText", "description", "descriptionText", "body", "bodyText" };
        }

        if (identifier == "author")
        {
            if (rssNode.HasValue("authorProperty"))
            {
                var authorProperty = rssNode.Value<string>("authorProperty") ?? "";
                if (currentNode.HasProperty(authorProperty))
                {
                    // Depending on type of property found for 'author picker' either get a field from a linked node, or from text on the current node
                    var propertyType = currentNode.GetProperty(authorProperty)?.PropertyType.EditorAlias;
                    if ((propertyType == "Umbraco.ContentPicker" || propertyType == "Umbraco.MemberPicker") && currentNode.Value<IPublishedContent>(authorProperty) != null)
                    {
                        currentNode = currentNode.Value<IPublishedContent>(authorProperty) ?? currentNode;
                        fields = new string[] { "Name" };
                    }
                    else if (propertyType == "Umbraco.TextBox")
                    {
                        fields = new string[] { authorProperty };
                    }
                }
            }
            else
            {
                return currentNode.CreatorName();    
            }
        }

        foreach (var fieldAlias in fields.Where(alias => !string.IsNullOrEmpty(alias)))
        {
            if (fieldAlias == "Name")
            {
                return currentNode.Name;
            }
            if (currentNode.HasValue(fieldAlias))
            {
                return HttpUtility.HtmlEncode(currentNode.Value<string>(fieldAlias));
            }
        }

        return "";
    }

}<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <atom:link href="@(rssUrl)" rel="self" />
        <title>@(feedTitle)</title>
        @if (!string.IsNullOrEmpty(feedSummary))
        {
            <description>@(feedSummary)</description>
        }
        <link>@(rootDomain)</link>
        <language>@(rssLanguage)</language>
        @foreach (var currentNode in rootNode.Descendants())
        {
            if (currentNode.Value<bool>("excludeFromRss") == false &&
                    currentNode.ContentType.Alias != Model.ContentType.Alias &&
                    (feedDocTypes == null || !feedDocTypes.Any() || feedDocTypes.Contains(rssNode.ContentType.Alias))
               )
            {
                var itemTitle = FallbackTextRenderer(currentNode, "title", Model);
                var itemSummary = FallbackTextRenderer(currentNode, "summary", Model);
                var itemPublishDate = FallbackTextRenderer(currentNode, "date", Model);
                var itemAuthor = FallbackTextRenderer(currentNode, "author", Model);
                var itemUrl = currentNode.Url(mode: UrlMode.Absolute);
                <item>
                    <title>@(itemTitle)</title>
                    <description><![CDATA[@(itemSummary)]]]]><![CDATA[></description>
                    <guid>@(itemUrl)</guid>
                    @(Html.Raw(String.Format("{0}{1}{2}", "<link>", itemUrl, "</link>")))
                    <pubDate>@(itemPublishDate)</pubDate>
                    <dc:creator>@(itemAuthor)</dc:creator>
                </item>
            }
        }
    </channel>
</rss>]]></Design>
    </Template>
  </Templates>
  <Stylesheets />
  <Scripts />
  <PartialViews />
  <Macros />
  <MacroPartialViews />
  <DictionaryItems />
  <Languages />
  <DataTypes />
  <MediaItems />
</umbPackage>